#
#spring.shardingsphere.datasource.names=demo0,demo1
#
#spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.common.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.common.username=root
#spring.shardingsphere.datasource.common.password=123456
#
#spring.shardingsphere.datasource.demo0.jdbc-url=jdbc:mysql://localhost:3306/sharding?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.demo1.jdbc-url=jdbc:mysql://localhost:3306/sharding?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
##配置分库策略
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
##配置分表策略
#spring.shardingsphere.rules.sharding.tables.user.table-strategy.standard.sharding-column=user_id
#spring.shardingsphere.rules.sharding.tables.user.table-strategy.standard.sharding-algorithm-name=user-table-inline
##完整分片表规则配置
#spring.shardingsphere.rules.sharding.tables.user.actual-data-nodes=demo$->{0..1}.user_$->{0..2}
#
##配置database-inline数据库分片算法(INLINE:行表达式分片算法)
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=demo$->{id % 2}
##配置user-table-inline表的分片算法
#spring.shardingsphere.rules.sharding.sharding-algorithms.user-table-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.user-table-inline.props.algorithm-expression=user_$->{user_id % 3}
#
##主键生成策略（雪花算法）
#spring.shardingsphere.rules.sharding.tables.user.key-generate-strategy.column=id
#spring.shardingsphere.rules.sharding.tables.user.key-generate-strategy.key-generator-name=snowflake
#spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
#spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
#
##打印sql
#spring.shardingsphere.props.sql-show=true


spring.shardingsphere.datasource.names=demo0

spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.common.username=root
spring.shardingsphere.datasource.common.password=123456

spring.shardingsphere.datasource.demo0.jdbc-url=jdbc:mysql://localhost:3306/sharding?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8

#配置分表策略
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=storeId
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=user-table-inline
#完整分片表规则配置
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=demo0.t_order_$->{1..2}

#配置user-table-inline表的分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.user-table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.user-table-inline.props.algorithm-expression=t_order_$->{storeId % 2 + 1}

#主键生成策略（雪花算法）
#spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
#spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123

#打印sql
spring.shardingsphere.props.sql-show=true

